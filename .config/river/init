#!/usr/bin/env bash

# ----------------------------
# VARIABLES
# ----------------------------
# Variables to save the headache of changing directories
SCRIPTS=~/.scripts
RIVER_CONFIG=~/.config/river
TERMAN=$SCRIPTS/extra/terman
MODRIVER=$RIVER_CONFIG/scripts/modriver
SUSPEND_CMD="systemctl suspend"
XLTERM="$HOME/.config/xlotus/term"

# I made these variables so I can center windows in rules.
resolution=`wlr-randr | grep --color=never "current" | awk '{print $1}'`
res_x=`echo $resolution | cut -d'x' -f1`
res_y=`echo $resolution | cut -d'x' -f2`


# --------------------------------------------------------
# FUNCTIONS
# --------------------------------------------------------
# 
# NOTE:
#
# bash sucks with whitespaces so if you try to make a oneliner
# bash function you will have an error as } needs to be on 
# its own separate line.
#
# So, to make it oneliner you need ; at the end of the command
# in the function.
#
# see functions below...
#

# spawn shell command in normal mode
function spawn () { riverctl map -layout 0 normal $1 $2 spawn "$3"; }

# spawn shell command in recording mode
function rspawn () { 
    riverctl map -layout 0 recording None $1 spawn "$2"
    riverctl map -layout 0 -release recording None $1 spawn "$MODRIVER exit"
}

# map river command in normal mode
function map () { riverctl map -layout 0 normal "$@"; }

# map river command in recording mode
function rmap () { riverctl map -layout 0 recording "$@"; }

# map mouse pointer in normal mode 
function pointer () { riverctl map-pointer normal "$@"; }

# send command to tiler (in this case, wideriver)
function tiler () { riverctl map -layout 0 normal $1 $2 send-layout-cmd wideriver "$3"; }

# Add app rule
function ruleAdd () { riverctl rule-add -app-id "$@"; }

# Specify tags app will start on
function tags () { 
    case $# in
        2)  
            if [ "$2" != "all" ]; then
                ruleAdd "$1" tags $(( 1 << ($2-1) )) 
            else
                ruleAdd "$1" tags $(( (1 << 32)-1 ))
            fi
            ;;
        3)  
            if [ "$3" != "all" ]; then
                ruleAdd "$1" -title "$2" tags $(( 1 << ($3-1) ))
            else
                ruleAdd "$1" -title "$2" tags $(( (1 << 32)-1 ))
            fi
            ;;
    esac
}

# Floating windows
function float () {
    # If title field is 0
    if [ $2 -eq 0 ]; then
        [ $# -ge 2 ] && ruleAdd "$1" float
        [ $# -ge 4 ] && ruleAdd "$1" dimensions $3 $4
        if [ $# -ge 6 ]; then 
            pos_x="$5"
            pos_y="$6"
            case $5 in
                center) pos_x="$((res_x/2 - $3/2))" ;;
                right) pos_x="$((res_x - $3))" ;;
                left) pos_x="1" ;;
            esac
            case $6 in
                center) pos_y="$((res_y/2 - $4/2))" ;;
                bottom) pos_y="$((res_y - $4))" ;;
                top) pos_y="1" ;;
            esac
            ruleAdd "$1" position $pos_x $pos_y
        fi
    else
        # If title is specified instead of 0
        [ $# -ge 2 ] && ruleAdd "$1" -title "$2" float
        [ $# -ge 4 ] && ruleAdd "$1" -title "$2" dimensions $3 $4
        if [ $# -ge 6 ]; then 
            pos_x="$5"
            pos_y="$6"
            case $5 in
                center) pos_x="$((res_x/2 - $3/2))" ;;
                right) pos_x="$((res_x - $3))" ;;
                left) pos_x="1" ;;
            esac
            case $6 in
                center) pos_y="$((res_y/2 - $4/2))" ;;
                bottom) pos_y="$((res_y - $4))" ;;
                top) pos_y="1" ;;
            esac
            ruleAdd "$1" -title "$2" position $pos_x $pos_y
        fi
    fi
}

# Settings for all mouse pointers
function mouse_pointers {
    pointer_arr=(`riverctl list-inputs | grep --color=never pointer | xargs`)
    for i in "${pointer_arr[@]}"; do
        riverctl input $i events enabled
        riverctl input $i tap enabled
        riverctl input $i drag enabled
        riverctl input $i drag-lock disabled
        riverctl input $i scroll-method edge
        riverctl input $i disable-while-typing enabled
        riverctl input $i tap-button-map left-right-middle
        riverctl input $i scroll-factor 1.5
    done
}

mouse_pointers


# --------------------------------------------------------
# RIVER SETTINGS
# --------------------------------------------------------
# Please note that wideriver overrides border colors set with
# riverctl
# --------------------------------------------------------
riverctl background-color 0x282828
riverctl border-color-focused 0xea6962
riverctl border-color-unfocused 0x282828
riverctl focus-follows-cursor "always"
riverctl default-attach-mode "bottom"
riverctl set-repeat 50 300

riverctl keyboard-layout \
            -variant ,digits \
            -options grp:shift_caps_toggle \
            us,ara

# --------------------------------------------------------
# TILER (Wideriver)
# --------------------------------------------------------
# 
# SOURCE: https://github.com/alex-courtis/wideriver
#
# Here I'm using wideriver as it provides what I need:
#
# 1. layout toggling.
# 2. monocle layout.
# 3. per tag layouts.
# 4. gaps between windows.
#
# --------------------------------------------------------

riverctl default-layout wideriver

wideriver --layout left                             \
          --layout-alt  monocle                     \
          --stack even                              \
          --count-master 1                          \
          --ratio-master 0.55                       \
          --no-smart-gaps                           \
          --inner-gaps 6                            \
          --outer-gaps 6                            \
          --border-width-monocle 0                  \
          --border-color-focused "0xea6962"         \
          --border-color-unfocused "0x282828"       \
          --border-width 3 &

# --------------------------------------------------------
# AUTOSTART
# --------------------------------------------------------
riverctl spawn "$RIVER_CONFIG/autostart"


# --------------------------------------------------------
# PROGRAMS
# --------------------------------------------------------

spawn Super P       keepassxc
spawn Super Return  konsole
spawn Super D       firefox
spawn Super A       "$TERMAN ffprofile"



# --------------------------------------------------------
# SHELL SCRIPTS
# --------------------------------------------------------

# My launcher with custom config
spawn Super R "$XLTERM run"                 

# Script manager to launch other shell scripts
spawn Super Q "$TERMAN sman"

# Search web
spawn Super S "$TERMAN search"

# Youtube RSS
spawn Super Y "$XLTERM yt"

# Youtube RSS
spawn Super C "$XLTERM virt"

# 
# XProp-like functionality ... not sufficient but it does the bare minimum 
# for picking the ID and Title of the window
# 
# it relies on lswt
# SOURCE: https://gitlab.com/snakedye/ristate
#
spawn Super+Shift P "$TERMAN rprop"

# 
# I get distracted when i use laptop during study sessions so I made 
# shortcuts for turning off/on the brightness quickly using numpad
#
# It will be better if i store current brightness instead in a file
# then toggling between it and 0 ... but maybe for the future
#
spawn None KP_Up "brightnessctl s 20%"
spawn None KP_Down "brightnessctl s 0%"

# launching LF terminal window
spawn Super E "$TERMAN fman"

# 
# Bookmark manager
#
spawn Super B "$TERMAN bmark"

# Autotype clipboard entry from history
spawn Super V "$TERMAN clip"

# 
# screenshooting using grim & slurp then pasting image
# to clipboard
#
# it makes it trivial for me to add images to Anki
#
spawn None Print "$SCRIPTS/shotcopy shot copy"
spawn Shift Print "$SCRIPTS/shotcopy shot region"
spawn Super Print "$SCRIPTS/shotcopy shot full"

# Making media keys work as they should
spawn Super equal            "$SCRIPTS/volumectl up"
spawn Super minus           "$SCRIPTS/volumectl down"
spawn Super backslash           "$SCRIPTS/volumectl toggle"
spawn Super bracketright    "$SCRIPTS/brightctl up"
spawn Super bracketleft     "$SCRIPTS/brightctl down"

# --------------------------------------------------------
# RECORDING MODE 
#
# (Keychord using the previously declared function at the top)
# --------------------------------------------------------
riverctl declare-mode recording

spawn None KP_Begin "$MODRIVER enter"

rspawn F "$SCRIPTS/shotcopy rec full"
rspawn R "$SCRIPTS/shotcopy rec region"
rspawn S "$SCRIPTS/shotcopy rec stop"
rspawn X "$SCRIPTS/shotcopy rec pause"
rspawn C "$SCRIPTS/shotcopy rec continue"

riverctl map recording None KP_Begin spawn "$MODRIVER exit"

# --------------------------------------------------------
# WM BINDINGS
# --------------------------------------------------------
map Super+Shift Q exit                          # exit river
map Super W close                               # close focused
map Super K focus-view previous                 # focus previous
map Super J focus-view next                     # focus next
map Super+Shift K swap previous                 # move up in stack
map Super+Shift J swap next                     # move down in stack
map Super Period focus-output next              # focus next monitor
map Super Comma focus-output previous           # focus previous monitor
map Super+Shift Period send-to-output next      # send to next monitor
map Super+Shift Comma send-to-output previous   # send to previous monitor
map Super+Shift Return zoom                     # swap master and focused
map Super F toggle-float                        # toggle floating
map Super Space toggle-fullscreen               # toggle fullscreen
map Super+Shift 0 set-view-tags $(( (1 << 32)-1 ))     # pin focused to all tags 
map Alt Tab focus-previous-tags                 # toggle between previous tag and current one
map Super+Shift Tab toggle-fullscreen               # toggle fullscreen

map Super+Alt L move right 100                  # move floated focused right
map Super+Alt H move left 100                   # move floated focused left
map Super+Alt K move up 100                     # move floated focused up
map Super+Alt J move down 100                   # move floated focused down

map Super+Control L resize horizontal 50        # grow horizontally
map Super+Control H resize horizontal -50       # shrink horizontally
map Super+Control K resize vertical 50          # grow vertically
map Super+Control J resize vertical -50         # shrink vertically

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))
    map Super $i set-focused-tags $tags         # focus tag
    map Super+Shift $i set-view-tags $tags      # send focused to tag
done

# Locked mode (When screen is locked)
riverctl map locked Super S spawn "$SUSPEND_CMD"

# Mouse buttons' bindings. It's self-explainatory
pointer Super BTN_LEFT move-view
pointer Super BTN_RIGHT resize-view
pointer Super BTN_MIDDLE toggle-float


# --------------------------------------------------------
# TILER BINDINGS (wideriver)
# --------------------------------------------------------
tiler Super H "--ratio -0.05"       # resize left
tiler Super L "--ratio +0.05"       # resize right
tiler Super Tab "--layout-toggle"   # toggle layout


# --------------------------------------------------------
# WINDOW RULES
# --------------------------------------------------------
# float function expects the following:
#   1. Id is always required.
#   2. Want title? add it. Don't want it? add 0.
#   3. Geometry is always width & height combined.
#   4. Position is expected when geometry is added beforehand.
#
# You may adjust the function as you need if you want more stuff.
# --------------------------------------------------------
#
#       APP-ID                       APP-TITLE                           W       H       X       Y 
float 'org.kde.konsole'             "riverprop — Konsole"               400     250    center   center
float 'org.kde.konsole'             "Floating — Konsole"                1100    500    center   center
float 'anki'                        "Browse*"                           1000    650    center   center
float 'anki'                        "Statistics"                        1000    650    center   center
float 'anki'                        "Preferences"                       1000    650    center   center
float 'anki'                        "Image Occlusion Enhanced*"         1200    650    center   center
float 'anki'                        "Add"                               500     650    center   center
float 'Gimp'                        "Change Foreground Color"           500     500    center   center
float 'Firefox'                     "Firefox - Choose User Profile"     1000    650    center   center
float 'org.keepassxc.KeePassXC'      0                                  900     550    center   center
float 'kvantummanager'               0                                  900     550    center   center
float 'kvantumpreview'               0                                  900     550    center   center
float 'mpv'                         "webcam"                            300     225    right    bottom
float 'org.pulseaudio.pavucontrol'   0                                  800     500    center   center
float 'Nsxiv'                        0
float 'org.fcitx.fcitx5-config-qt'   0
float 'nm-connection-editor'         0
float 'org.kde.kdeconnect.handler'   0
float 'org.kde.kdeconnect.daemon'    0

# Start app in specific tag
#    APP-ID                                                           TAG
tags 'sioyek'                                                          1
tags 'mpv'                                                             3
tags 'firefox'                  "Mozilla Firefox"                      4
tags 'firefox-code'                                                    5
tags 'anki'                     "* - Anki"                             6
tags 'Gimp'                                                            7
tags 'org.inkscape.Inkscape'                                           7
tags 'org.telegram.desktop'                                            8
tags 'Godot'                                                           9
tags 'Godot_Engine'                                                    9
tags 'qemu'                                                            9
tags 'mpv'                      "webcam"                               all

# Decorations
# Server side decorations
ruleAdd "qemu" ssd
