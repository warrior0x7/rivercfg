#!/bin/bash

# ----------------------------
# PACKAGE MANAGER
# ----------------------------
alias q='pacman -Ss'                    # Search for package
alias u='sudo pacman -Syu --noconfirm'  # Update all packages
alias i='sudo pacman -Sy --noconfirm'   # Install package
alias r='sudo pacman -R --noconfirm'    # Remove package
alias cc='sudo pacman -Scc'             # Clear cache
alias o='pacman -Qdt'                   # List orphan packages
alias info='pacman -Si'                 # Get info on package
alias e='sudo pacman -D --asexp'        # Mark package as explicitly installed
alias d='sudo pacman -D --asdep'        # Mark package as dependency
alias f='pacman -Ql'                    # List files installed by a package



# ----------------------------
# TOOLS / UTILITIES
# ----------------------------
alias mki='make && sudo make install'
alias grep='grep --color=always -i'
alias ll='eza -lah --icons=always --group-directories-first --sort=modified --time-style="+%Y/%m/%d %p %I:%M"'
alias v='nvim'
alias sv='sudo nvim -u ~/.config/nvim/init.lua'
alias ugrub='sudo grub-mkconfig -o /boot/grub/grub.cfg'
alias ytd='yt-dlp -f "bestvideo[ext=mp4][vcodec^=avc][height<=720]+bestaudio/best[height<=720]"'
alias sb="source ~/.bashrc"
alias rm="trash"
alias tl="trash-list"
alias tre="trash-restore"
alias rgi="grep . --color=never -r /sys/firmware/acpi/interrupts"

function rgc () {
    grep -r "$1" *
}

function mks () {
    if [ -n "$1" ]; then
        if ! [ -f $1 ]; then
            touch $1
            cat <<-AEOF > $1
#!/usr/bin/env bash

source ~/.local/lib/xlotus/xlfns

function printHelp () {
    cat <<-EOF
Description: 

Usage:

Option: One of the following:

    -h , --help:
        Prints this help page.

Project:
    This script is a part of xlotus utilities
    https://github.com/warrior0x7/xlotus
EOF
}

case \$1 in
    -h|--help) printHelp ;;
    *)
        ;;
esac
AEOF
            chmod +x $1
            nvim $1
        else
            echo -e "File already exists\nI will open it in your EDITOR ($EDITOR)"
            nvim $1
        fi
    else
        echo "No file name provided"
    fi
}

# ----------------------------
# GIT
# ----------------------------

function bare () { /usr/bin/git --git-dir=/home/user/git/rivercfg/ --work-tree=$HOME "$@";}
function git_relay () { $1 ;}

function git_purge () {
    $1 filter-branch --index-filter "git rm -rf --cached --ignore-unmatch $2" HEAD
}

function git_options () {
    case $2 in
        # ----------------------------
        # COMMON OPTIONS
        # ----------------------------
        a) $1 add "${@:3}" ;;
        u) $1 add -u "${@:3}" ;;
        c) $1 commit "${@:3}" ;;
        p) $1 push -u origin main "${@:3}" ;;
        s) $1 status "${@:3}" ;;
        l) $1 log "${@:3}" ;;
        lu) $1 ls-files --others "${@:3}" ;;
        pull) $1 pull origin main --allow-unrelated-histories "${@:3}" ;;
        ds) $1 difftool --staged "${@:3}" ;;
        d) $1 difftool "${@:3}" ;;
        r) $1 rm --cached "${@:3}" ;;
        rm) $1 rm "${@:3}" ;;
        ra) $1 remote add origin "${@:3}" ;;
        rs) $1 remote set-url origin "${@:3}" ;;
        stop) $1 update-index --skip-worktree "${@:3}" ;;
        purge) git_purge $1 "${@:3}";;
        cc) 
            $1 rebase -i HEAD~$3 "${@:4}"
            $1 commit --amend
            $1 rebase --continue
            ;;
        *)
            # ----------------------------
            # SPECIFIC OPTIONS
            # ----------------------------
            case $1 in
                git)
                    case $2 in
                        i) git init "${@:3}" ;;
                    esac
                    ;;

                bare)
                    case $2 in
                        setup) 
                            git init --bare "$3"
                            sed -i 's|^function bare ().*$|function bare () { /usr/bin/git --git-dir='$3' --work-tree=$HOME "$@";}|g' ~/bash/aliases
                            source ~/.bashrc
                            bare config --local status.showUntrackedFiles no
                            ;;
                    esac
                    ;;
            esac
    esac
}

function b () { git_options bare "$@"; }
function g () { git_options git "$@"; }
